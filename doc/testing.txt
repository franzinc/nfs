Correctness and performance testing are detailed here.

*******************************************************************************
** Correctness
*******************************************************************************

 freon$ make runtests

setup:

 * See the variables near the `runtests' rule in Makefile, make sure
   they are all correct
 * windows: thunder:
   - sshd must be running
   - make a directory c:/tmp/nfs.test and put a copy of some large
     file there and call it `nfstestfile'
   - NFS shares c:/ as '/c' and c:/tmp/nfs.test as `/nfs.test'
       specify the uid of the test user
 * linux: gremlin:
   - make sure /home/tmp/layer/nfs.test exists and put a copy of the
     same `nfstestfile' there (via some means other than NFS)
   - `make testnfs`
   - mounts /net/<winhost>/c and .../nfs.test exist
     ie:   sudo mkdir /net/<winhost>/c
     	   sudo mount <winhost>:/c /net/<winhost>/c ...
   - `export ONALL_SSH_PORT_thunder=8100` where 8100 is taken from
     your SSH config file and is your assigned SSHD port number
 * Manually test to verify that large uid is accepted [bug26156]:
       Create a user with a uid bigger than a 32-bit fixnum
       such as 600000000 and modify config file to specify 
       this user.

*******************************************************************************
** Performance
*******************************************************************************

The following setup produces more stable results than anything found
so far:
 - VMware Fusion on a Mac Pro
   - aNFS server: Windows 7 x64 Enterprise
   - test client: Ubuntu 16.04
The test client cannot be run on Windows, because the test program
fails (it seems to be a	bug in Cygwin).

The following script, test/performance.sh, runs `hammernfs' in many
different combinations of block size (from 512 to 8192), NFS protocol
versions (2 & 3) and transport layers (tcp & udp).

Setup:

Server:

 * put a 30M file into the NFS share "nfs.test", which must have write
   access to the root of the nfs.test share.  There is usually one in
   freon:/home/tmp/layer/nfs.test/.

 * start the task manager and minimize it, and wait for the system to
   settle into a true idle.  Sometimes after starting the VM, Windows
   will go crazy for a while doing who knows what.

Client:

 * OPTIONAL: on Ubuntu, if NFS client utilities are wanted, for
   testing (for "mount -t nfs" to work):

    # apt-get install nfs-common

 * "make hammernfs" and then "scp -rq" this nfs repo directory over to
   the client.

 * find the IP of the server, and do

   $ test/performance.sh 192.132.95.228:/nfs.test/nfstestfile 6.3.2.rc1

 * copy the results file back here, git add it, and do "make results"
   to see how it stacks up against previous versions.

If multiple versions are tested, then do this when one version is
finished testing:

 - uninstall old version
 - reboot
 - install new version
 - start task manager, performance tab and wait until the machine
   settles, then minimize the task manager

Now, run the tests on the client.  NOTE: the client machine is not
rebooted between runs.
